@model FileIntegrityMonitor.Models.FileRecord

@{
    ViewData["Title"] = "File Details";
}

<div class="container">
    <h1>File Details</h1>

    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <h5 class="card-title">File Information</h5>
            <dl class="row">
                <dt class="col-sm-3">Path:</dt>
                <dd class="col-sm-9">@Model.FilePath</dd>

                <dt class="col-sm-3">Current Hash:</dt>
                <dd class="col-sm-9"><code>@Model.Sha256Hash</code></dd>

                <dt class="col-sm-3">Last Modified:</dt>
                <dd class="col-sm-9">@Model.LastModified.ToString("yyyy-MM-dd HH:mm:ss")</dd>
            </dl>
        </div>
    </div>

    <h2>Change History</h2>

    @if (Model.ChangeLogs.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Date/Time</th>
                        <th>Change Type</th>
                        <th>User</th>
                        <th>Previous Hash</th>
                        <th>New Hash</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var log in Model.ChangeLogs.OrderByDescending(l => l.ChangeTimestamp))
                    {
                        <tr>
                            <td>@log.ChangeTimestamp.ToString("yyyy-MM-dd HH:mm:ss")</td>
                            <td>
                                @switch (log.ChangeType)
                                {
                                    case FileIntegrityMonitor.Models.ChangeType.New:
                                        <span class="badge bg-success">New</span>
                                        break;
                                    case FileIntegrityMonitor.Models.ChangeType.Modified:
                                        <span class="badge bg-warning text-dark">Modified</span>
                                        break;
                                    case FileIntegrityMonitor.Models.ChangeType.Deleted:
                                        <span class="badge bg-danger">Deleted</span>
                                        break;
                                }
                            </td>
                            <td>@(log.User?.FirstName + " " + log.User?.LastName)</td>
                            <td><code class="small">@(log.ChangeType == FileIntegrityMonitor.Models.ChangeType.New ? "N/A" : log.PreviousHash)</code></td>
                            <td><code class="small">@log.NewHash</code></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-info">
            <p>No change history found for this file.</p>
        </div>
    }

    <div class="mt-3">
        <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
    </div>
</div>